<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

    <!--数据库配置文件  -->
    <!--druid数据源配置  -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="url" value="${jdbcUrl_postgres}" />
        <property name="driverClassName" value="${driver_postgres}" />
        <property name="username" value="${user_postgres}" />
        <property name="password" value="${passwd_postgres}" />
        <property name="filters" value="stat" />
        <property name="maxActive" value="1000" />
        <property name="initialSize" value="1" />
        <property name="maxWait" value="60000" />
        <property name="minIdle" value="1" />
        <property name="timeBetweenEvictionRunsMillis" value="3000" />
        <property name="minEvictableIdleTimeMillis" value="300000" />
        <property name="validationQuery" value="SELECT 'x'" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize"	value="2000" />
        <!-- 这里配置提交方式，默认就是TRUE，可以不用配置 -->
        <property name="defaultAutoCommit" value="true" />
        <property name="proxyFilters">
            <list>
                <ref bean="logFilter" />
                <ref bean="statFilter" />
                <ref bean="wallFilter" />
            </list>
        </property>
    </bean>
    <!-- Druid 关于SQL查询记录的监控配置 -->
    <bean id="statFilter" class="com.alibaba.druid.filter.stat.StatFilter">
        <property name="slowSqlMillis" value="10000" />
        <property name="logSlowSql" value="true" />
        <property name="mergeSql" value="true" />
    </bean>
    <!--Druid关于Logback监控的配置文件  -->
    <bean id="logFilter" class="com.alibaba.druid.filter.logging.Slf4jLogFilter">
        <property name="statementExecutableSqlLogEnable" value="true" />
    </bean>
    <!--SQL防火墙配置，  -->
    <bean id="wallFilter" class="com.alibaba.druid.wall.WallFilter">
        <property name="dbType" value="mysql" />
        <property name="logViolation" value="true" />
        <property name="throwException" value="false" />
        <!-- <property name="config" ref="wall-filter-config" /> -->
    </bean>
    <!--Druid关于Spring监控的配置，  按照方法名正则匹配拦截配置-->
    <bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor" />
    <bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut"  scope="prototype" />
    <aop:config>
        <aop:advisor advice-ref="druid-stat-interceptor"   pointcut-ref="druid-stat-pointcut" />
    </aop:config>



    <!-- 创建SqlSessionFactory，同时指定数据源 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" >
            <value>classpath:/config/mybatisConfig.xml</value>
        </property>
        <property name="mapperLocations">
            <list>
                <value>classpath:/mapper/**/*.xml</value>
            </list>
        </property>
    </bean>
    <!-- 配置扫描器 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 扫描dal这个包以及它的子包下的所有映射接口类 -->
        <property name="basePackage" value="com.hsmdata.priceless" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
        
    </bean>



    <!--事务配置的管理  -->
    <bean id="transactionManager"  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <!--通过注解的双方是来实现事务的控制  -->
    <tx:annotation-driven transaction-manager="transactionManager" />

</beans>
