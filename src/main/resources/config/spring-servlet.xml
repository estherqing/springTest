<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
            http://www.springframework.org/schema/context 
            http://www.springframework.org/schema/context/spring-context-3.2.xsd
            http://www.springframework.org/schema/aop 
            http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
            http://www.springframework.org/schema/tx 
            http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
            http://www.springframework.org/schema/mvc 
            http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">


	<!-- 启用spring mvc 注解 -->
	<mvc:annotation-driven conversion-service="conversionService">
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/plain;charset=UTF-8</value>
						<value>text/html;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	<bean id="conversionService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters">
			<list>
				<!-- <bean class="com.ll.model.StringToPersonConverter" /> -->
			</list>
		</property>
	</bean>

	<mvc:default-servlet-handler />

	<!--增加spring对返回数据的 json化支持 -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean>
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- 拦截器 -->
	<mvc:interceptors>
		<!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
		<bean
			class="com.hsmdata.springTest.common.framework.filter.StopWatchHandlerInterceptor"></bean>
		<bean class="com.hsmdata.springTest.common.framework.filter.AllInterceptor"></bean>
		<mvc:interceptor>
			<mvc:mapping path="/login.do" />
			<!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 -->
			<bean
				class="com.hsmdata.springTest.common.framework.filter.TimeInterceptor">
				<property name="openingTime">
					<value>9</value>
				</property>
				<property name="closingTime">
					<value>17</value>
				</property>
				<property name="outsideOfficeHoursPage">
					<value>http://localhost:8080/springTest/index.jsp</value>
				</property>
			</bean>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/login.do" />
			<!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 -->
			<bean
				class="com.hsmdata.springTest.common.framework.filter.LoginInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- 扫描业务组件,让spring不扫描带有@Service注解的类(留在root-context.xml中扫描@Service注解的类),防止事务失效 -->
	<context:component-scan base-package="com.hsmdata.springTest">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Repository" />
	</context:component-scan>

	<!-- 启用CGliB ,主要是对AOP的支持 -->
	<!-- <aop:aspectj-autoproxy proxy-target-class="true" /> -->

	<bean id="helloWorldImp1" autowire="byName" scope="singleton"
		class="com.hsmdata.springTest.modules.aop.HelloWorldImp1">
		<!-- <property name="test"> -->
		<!-- inner bean -->
		<!-- <bean scope="prototype" class="com.hsmdata.springTest.modules.aop.HelloWorldImp2"></bean> 
			</property> -->
	</bean>
	<bean id="helloWorldImp2" class="com.hsmdata.springTest.modules.aop.HelloWorldImp2" />
	<bean id="timeHandler" class="com.hsmdata.springTest.modules.aop.TimeHandler" />
	<bean id="logHandler" class="com.hsmdata.springTest.modules.aop.LogHandler" />

	<aop:config><!-- proxy-target-class="false" -->
		<!-- <aop:aspect id="time" ref="timeHandler" order="1"> <aop:pointcut id="addTime" 
			expression="execution(* com.hsmdata.springTest.modules.aop.HelloWorld.*(..))" 
			/> <aop:before method="printTime" pointcut-ref="addTime" /> <aop:after method="printTime" 
			pointcut-ref="addTime" /> </aop:aspect> -->

		<aop:aspect id="time" ref="timeHandler">
			<aop:pointcut id="addAllMethod"
				expression="execution(* com.hsmdata.springTest.modules.aop.HelloWorld.*(..))" />
			<aop:before method="printTime" pointcut-ref="addAllMethod" />
			<aop:after method="printTime" pointcut-ref="addAllMethod" />
		</aop:aspect>

		<aop:aspect id="log" ref="logHandler" order="2">
			<aop:pointcut id="printLog"
				expression="execution(* com.hsmdata.springTest.modules.aop.HelloWorld.*(..))" />
			<aop:before method="LogBefore" pointcut-ref="printLog" />
			<aop:after method="LogAfter" pointcut-ref="printLog" />
		</aop:aspect>
	</aop:config>

	<!-- 对转向页面的路径解析。prefix：前缀， suffix：后缀 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	<!-- 文件上传注解 -->
	<!--<bean id="multipartResolver" -->
	<!--class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> -->
	<!--&lt;!&ndash; max upload size in bytes &ndash;&gt; -->
	<!--<property name="maxUploadSize" value="209715200" /> &lt;!&ndash; 20MB 
		&ndash;&gt; -->
	<!--&lt;!&ndash; max size of file in memory (in bytes) &ndash;&gt; -->
	<!--<property name="maxInMemorySize" value="209715200" /> &lt;!&ndash; 1MB 
		&ndash;&gt; -->
	<!--</bean> -->
</beans>